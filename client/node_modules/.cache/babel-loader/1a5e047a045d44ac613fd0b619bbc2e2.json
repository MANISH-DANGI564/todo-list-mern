{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\monit\\\\Desktop\\\\my to do\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\monit\\\\Desktop\\\\my to do\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport * as actionTypes from '../actions/type';\nexport var todosReducers = function todosReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.ADDNEW_TODO:\n      return [action.payload].concat(_toConsumableArray(state));\n    case actionTypes.GETALL_TODO:\n      return action.payload;\n    case actionTypes.TOGGLE_TODO:\n      return state.map(function (todo) {\n        return todo._id === action.payload._id ? _objectSpread({}, todo, {\n          done: !todo.done\n        }) : todo;\n      });\n    case actionTypes.UPDATE_TODO:\n      return state.map(function (todo) {\n        return todo._id === action.payload._id ? _objectSpread({}, todo, {\n          data: action.payload.data\n        }) : todo;\n      });\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["actionTypes","todosReducers","state","arguments","length","undefined","action","type","ADDNEW_TODO","payload","concat","_toConsumableArray","GETALL_TODO","TOGGLE_TODO","map","todo","_id","_objectSpread","done","UPDATE_TODO","data"],"sources":["C:/Users/monit/Desktop/my to do/client/src/redux/reducers/todosReducer.js"],"sourcesContent":["import * as actionTypes from '../actions/type'; \r\n\r\nexport const todosReducers = (state = [],action) => {\r\n        switch(action.type){\r\n            case actionTypes.ADDNEW_TODO:\r\n                return [action.payload,...state]\r\n            case actionTypes.GETALL_TODO:\r\n                return action.payload\r\n            case actionTypes.TOGGLE_TODO:\r\n                return state.map(todo => (\r\n                    todo._id === action.payload._id ? {...todo , done : !todo.done} : todo\r\n                ))\r\n            case actionTypes.UPDATE_TODO:\r\n                return state.map(todo => (\r\n                    todo._id === action.payload._id ? {...todo , data : action.payload.data  } : todo\r\n                ))\r\n                \r\n            default:\r\n              return state;\r\n        }\r\n}"],"mappings":";;AAAA,OAAO,KAAKA,WAAW,MAAM,iBAAiB;AAE9C,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAA0B;EAAA,IAAtBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAACG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvC,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKP,WAAW,CAACQ,WAAW;MACxB,QAAQF,MAAM,CAACG,OAAO,EAAAC,MAAA,CAAAC,kBAAA,CAAIT,KAAK;IACnC,KAAKF,WAAW,CAACY,WAAW;MACxB,OAAON,MAAM,CAACG,OAAO;IACzB,KAAKT,WAAW,CAACa,WAAW;MACxB,OAAOX,KAAK,CAACY,GAAG,CAAC,UAAAC,IAAI;QAAA,OACjBA,IAAI,CAACC,GAAG,KAAKV,MAAM,CAACG,OAAO,CAACO,GAAG,GAAAC,aAAA,KAAOF,IAAI;UAAGG,IAAI,EAAG,CAACH,IAAI,CAACG;QAAI,KAAIH,IAAI;MAAA,CACzE,CAAC;IACN,KAAKf,WAAW,CAACmB,WAAW;MACxB,OAAOjB,KAAK,CAACY,GAAG,CAAC,UAAAC,IAAI;QAAA,OACjBA,IAAI,CAACC,GAAG,KAAKV,MAAM,CAACG,OAAO,CAACO,GAAG,GAAAC,aAAA,KAAOF,IAAI;UAAGK,IAAI,EAAGd,MAAM,CAACG,OAAO,CAACW;QAAI,KAAML,IAAI;MAAA,CACpF,CAAC;IAEN;MACE,OAAOb,KAAK;EAAC;AAE3B,CAAC"},"metadata":{},"sourceType":"module"}